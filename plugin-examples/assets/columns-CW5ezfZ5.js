function s(c,n){return Math.ceil(c*n)<=1?0:Math.max(1,Math.floor(n))}function a(c,n,l){return Math.round(c*n)-(l??s(c,n))}function d(c,n){const l=s(c,n),u=a(c,n,l),o=u%2===0,h=(u-(o?0:1))/2;return{spacing:l,shiftLeft:o,columnHalfWidthBitmap:h,horizontalPixelRatio:n}}function W(c,n,l){const u=c*n.horizontalPixelRatio,o=Math.round(u),h={left:o-n.columnHalfWidthBitmap,right:o+n.columnHalfWidthBitmap-(n.shiftLeft?1:0),shiftLeft:o>u},i=n.spacing+1;return l&&h.left-l.right!==i&&(l.shiftLeft?l.right=h.left-i:h.left=l.right+i),h}function M(c,n,l,u,o){const h=d(n,l);let i;for(let t=u;t<Math.min(o,c.length);t++)c[t].column=W(c[t].x,h,i),i=c[t].column;const m=c.reduce((t,f,r)=>{if(!f.column||r<u||r>o)return t;f.column.right<f.column.left&&(f.column.right=f.column.left);const g=f.column.right-f.column.left+1;return Math.min(t,g)},Math.ceil(n*l));h.spacing>0&&m<4&&c.forEach((t,f)=>!t.column||f<u||f>o?void 0:t.column.right-t.column.left+1<=m?t:(t.column.shiftLeft?t.column.right-=1:t.column.left+=1,t.column))}export{M as c};
