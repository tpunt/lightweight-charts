"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["56970"],{16596:function(e,n,t){t.d(n,{Z:function(){return r}});let r={ChartContainer:"ChartContainer_Hwvl"}},92097:function(e,n,t){t.r(n),t.d(n,{default:()=>w,frontMatter:()=>O,metadata:()=>r,assets:()=>R,toc:()=>_,contentTitle:()=>v});var r=JSON.parse('{"id":"react/advanced","title":"Advanced React example","description":"This example demonstrates how to integrate Lightweight Charts\u2122 with React. Unlike the basic example, which uses a single component, this one shows how to split the library API across multiple components.","source":"@site/tutorials/react/02-advanced.mdx","sourceDirName":"react","slug":"/react/advanced","permalink":"/lightweight-charts/tutorials/react/advanced","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Advanced example","hide_table_of_contents":false},"sidebar":"tutorialsSidebar","previous":{"title":"Basic example","permalink":"/lightweight-charts/tutorials/react/simple"},"next":{"title":"Vue.js","permalink":"/lightweight-charts/tutorials/vuejs/wrapper"}}'),i=t("85893"),a=t("50065"),s=t("10169"),o=t("30353"),c=t("34946"),l=t("67294");let h=(0,l.createContext)(),d=[{time:"2018-10-11",value:52.89},{time:"2018-10-12",value:51.65},{time:"2018-10-13",value:51.56},{time:"2018-10-14",value:50.19},{time:"2018-10-15",value:51.86},{time:"2018-10-16",value:51.25}],p=[{time:"2018-10-11",value:42.89},{time:"2018-10-12",value:41.65},{time:"2018-10-13",value:41.56},{time:"2018-10-14",value:40.19},{time:"2018-10-15",value:41.86},{time:"2018-10-16",value:41.25}],u=new Date(d[d.length-1].time),f=e=>{let{colors:{backgroundColor:n=CHART_BACKGROUND_COLOR,lineColor:t=LINE_LINE_COLOR,textColor:r=CHART_TEXT_COLOR}={}}=e,[a,s]=(0,l.useState)({}),o=(0,l.useRef)(null),c=(0,l.useRef)(null),[h,f]=(0,l.useState)(!1),[m,x]=(0,l.useState)(!1);return(0,l.useEffect)(()=>{let e;if(null!==o.current)return h&&(e=setInterval(()=>{u.setDate(u.getDate()+1);let e={time:u.toISOString().slice(0,10),value:53-2*Math.random()};o.current.update(e),c.current&&c.current.update({...e,value:43-2*Math.random()})},1e3)),()=>clearInterval(e)},[h]),(0,l.useEffect)(()=>{s({background:{color:n},textColor:r})},[n,r]),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("button",{type:"button",onClick:()=>f(e=>!e),children:h?"Stop updating":"Start updating series"}),(0,i.jsx)("button",{type:"button",onClick:()=>x(e=>!e),children:m?"Remove second series":"Add second series"}),(0,i.jsxs)(C,{layout:a,children:[(0,i.jsx)(g,{ref:o,type:"line",data:d,color:t}),m&&(0,i.jsx)(g,{ref:c,type:"area",data:p,color:t})]})]})};function C(e){let[n,t]=(0,l.useState)(!1),r=(0,l.useCallback)(e=>t(e),[]);return(0,i.jsx)("div",{ref:r,children:n&&(0,i.jsx)(m,{...e,container:n})})}let m=(0,l.forwardRef)((e,n)=>{let{children:t,container:r,layout:a,...s}=e,o=(0,l.useRef)({isRemoved:!1,api(){return this._api||(this._api=(0,c.C2)(r,{...s,layout:a,width:r.clientWidth,height:300}),this._api.timeScale().fitContent()),this._api},free(e){this._api&&e&&this._api.removeSeries(e)}});return(0,l.useLayoutEffect)(()=>{let e=o.current.api(),n=()=>{e.applyOptions({...s,width:r.clientWidth})};return window.addEventListener("resize",n),()=>{window.removeEventListener("resize",n),o.current.isRemoved=!0,e.remove()}},[]),(0,l.useLayoutEffect)(()=>{o.current.api()},[]),(0,l.useLayoutEffect)(()=>{o.current.api().applyOptions(s)},[]),(0,l.useImperativeHandle)(n,()=>o.current.api(),[]),(0,l.useEffect)(()=>{o.current.api().applyOptions({layout:a})},[a]),(0,i.jsx)(h.Provider,{value:o.current,children:e.children})});m.displayName="ChartContainer";let g=(0,l.forwardRef)((e,n)=>{let t=(0,l.useContext)(h),r=(0,l.useRef)({api(){if(!this._api){let{children:n,data:r,type:i,...a}=e;this._api="line"===i?t.api().addSeries(c.eh,a):t.api().addSeries(c.f6,a),this._api.setData(r)}return this._api},free(){this._api&&!t.isRemoved&&t.free(this._api)}});return(0,l.useLayoutEffect)(()=>{let e=r.current;return e.api(),()=>e.free()},[]),(0,l.useLayoutEffect)(()=>{let n=r.current,{children:t,data:i,...a}=e;n.api().applyOptions(a)}),(0,l.useImperativeHandle)(n,()=>r.current.api(),[]),(0,i.jsx)(h.Provider,{value:r.current,children:e.children})});g.displayName="Series";var x=t("16596");let O={sidebar_label:"Advanced example",hide_table_of_contents:!1},v="Advanced React example",R={},_=[{value:"Component-based architecture",id:"component-based-architecture",level:2},{value:"Complete code",id:"complete-code",level:2},{value:"Result",id:"result",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function b(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"advanced-react-example",children:"Advanced React example"})}),"\n",(0,i.jsxs)(n.p,{children:["This example demonstrates how to integrate Lightweight Charts\u2122 with React. Unlike the ",(0,i.jsx)(n.a,{href:"./simple",children:"basic example"}),", which uses a single component, this one shows how to split the library API across multiple components."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This guide assumes that you are familiar with Lightweight Charts\u2122. You should know how to set up a project and create a chart.\nWe also recommend that you consider the ",(0,i.jsx)(n.a,{href:"./simple",children:"basic React example"})," first."]})}),"\n",(0,i.jsx)(n.h2,{id:"component-based-architecture",children:"Component-based architecture"}),"\n",(0,i.jsxs)(n.p,{children:["In Lightweight Charts\u2122, a chart is a container that stores one or more ",(0,i.jsx)(n.a,{href:"/docs/series-types",children:"series"}),".\nEach series has its own options, such as ",(0,i.jsx)(n.a,{href:"/docs/api/interfaces/AreaStyleOptions",children:(0,i.jsx)(n.code,{children:"AreaStyleOptions"})})," and ",(0,i.jsx)(n.a,{href:"/docs/api/interfaces/LineStyleOptions",children:(0,i.jsx)(n.code,{children:"LineStyleOptions"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In your React application, you can create a ",(0,i.jsx)(n.em,{children:"Chart"})," component that has ",(0,i.jsx)(n.em,{children:"Series"})," child components. Each ",(0,i.jsx)(n.em,{children:"Series"})," could also have its own children, and so on.\nThe pseudocode below shows a potential application structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<Chart component>\n    <Series component 1>\n        <Child component />\n    </Series component 1>\n\n    {/* ... */}\n\n    <Series component N>\n        <Child component />\n    </Series component N>\n</Chart component>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The components should interact with each other, for example, when more data is loaded to the series or the chart is resized.\nTo implement this interaction, use ",(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/hooks",children:"hooks"})," and ",(0,i.jsx)(n.a,{href:"https://reactjs.org/docs/composition-vs-inheritance.html",children:"composition"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["One drawback of hooks, such as ",(0,i.jsx)(n.a,{href:"https://react.dev/reference/react/hooks#effect-hooks",children:(0,i.jsx)(n.code,{children:"useEffect"})}),", in a parent\u2013child setup is that hooks run in a bottom-up order during instantiation, but in a top-down order during cleanup.\nThe following skeleton illustrates the mechanism."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import React, { useEffect } from 'react';\n\nexport const ParentComponent = () => {\n    // This effect will be triggered in position 3\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 1\n        }\n    , []);\n\n    // This effect will be triggered in position 4\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 2\n        }\n    , []);\n\n    // All props and internal references will be passed down to the children\n    return (\n        <ChildComponent />\n    );\n};\nParentComponent.displayName = 'ParentComponent';\n\nexport const ChildComponent = () => {\n    // This effect will be triggered in position 1\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 3\n        }\n    , []);\n\n    // This effect will be triggered in position 2\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 4\n        }\n    , []);\n\n    return (\n        <div />\n    );\n};\nChildComponent.displayName = 'ChildComponent';\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the ",(0,i.jsx)(n.code,{children:"ChildComponent"})," (",(0,i.jsx)(n.em,{children:"Series"}),") may be created before the ",(0,i.jsx)(n.code,{children:"ParentComponent"})," (",(0,i.jsx)(n.em,{children:"Chart"}),"), which can lead to unexpected behavior.\nTo prevent this, you should use hooks with ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/manipulating-the-dom-with-refs",children:"refs"})," that allow a parent to share internal references or properties directly with its children."]}),"\n",(0,i.jsx)(n.p,{children:"Considering using refs, the component structure and usage remain the same, but under the hood it works as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<Chart component>\n    <ChartContainer>\n        <Series component 1>\n            <Child component />\n        </Series component 1>\n\n        {/* ... */}\n\n        <Series component N>\n            <Child component />\n        </Series component N>\n    <ChartContainer>\n</Chart component>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this structure, ",(0,i.jsx)(n.code,{children:"ChartContainer"})," is required to provide a DOM element where the chart will be rendered. ",(0,i.jsx)(n.code,{children:"ChartContainer"})," also creates a reference that stores functions to manage the chart's lifecycle. This reference is then passed down to each ",(0,i.jsx)(n.em,{children:"Series"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"Series"})," component uses the same approach to manage the lifecycle of a series: creating, adding data, and cleaning it up."]}),"\n",(0,i.jsx)(n.p,{children:"Both of these components can expose functions from their internal reference objects at a higher level.\nTherefore, any other component can interact with the chart or any series directly."}),"\n",(0,i.jsx)(n.p,{children:"The application skeleton is shown below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import React, { useEffect, useImperativeHandle, useRef, createContext, forwardRef } from 'react';\n\nconst Context = createContext();\n\nexport const MainComponent = props =>\n    // Creates the first reference and instantiates a ParentComponent\n    (\n        <div ref={chartReference}>\n            <ParentComponent {...props} container={container} />\n        </div>\n    );\n\nexport const ParentComponent = forwardRef((props, ref) => {\n    const internalRef = useRef({\n        method1() {\n            // This function would be responsible for creating the chart for instance\n        },\n        methodn() {\n            // This function would be responsible for cleaning up the chart\n        },\n    });\n\n    // This effect will be triggered in position 3\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 1\n        }\n    , []);\n\n    // This effect will be triggered in position 4\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 2\n        }\n    , []);\n\n    useImperativeHandle(ref, () => {\n        // That's the hook responsible for exposing part of/entirety of internalRef\n    }, []);\n\n    // Following bit is to propagate all props & internalRef object down to children\n    return (\n        <Context.Provider value={internalRef.current}>\n            {props.children}\n        </Context.Provider>\n    );\n});\nParentComponent.displayName = 'ParentComponent';\n\nexport const ChildComponent = forwardRef((props, ref) => {\n    const internalRef = useRef({\n        method1() {\n            // This function would be responsible for creating a series\n        },\n        methodn() {\n            // This function would be responsible for removing it\n        },\n    });\n\n    // This effect will be triggered in position 1\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 3\n        }\n    , []);\n\n    // This effect will be triggered in position 2\n    useEffect(() =>\n        () => {\n            // This cleanup will be triggered in position 4\n        }\n    , []);\n\n    useImperativeHandle(ref, () => {\n        // That's the hook responsible for exposing part of/entirety of internalRef\n    }, []);\n\n    // Following bit is to propagate all props & internalRef object down to children\n    return (\n        <Context.Provider value={internalRef.current}>\n            {props.children}\n        </Context.Provider>\n    );\n});\nChildComponent.displayName = 'ChildComponent';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"complete-code",children:"Complete code"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["In this example, chart colors are specified with props depending on the current theme (light or dark). In a real application, consider using ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/passing-data-deeply-with-context",children:"Context"})," instead."]})}),"\n","\n",(0,i.jsx)(o.ZP,{replaceThemeConstants:!0,className:"language-jsx",children:"// delete-start\n/* Note: this file shouldn't be used directly because it has some constants which are set by\nthe docusaurus site to ensure that the chart looks great in both dark and light color themes.\nIf you want to use this example then please copy the code presented on the documentation site.\n[link](https://tradingview.github.io/lightweight-charts/tutorials/react/advanced) */\n// delete-end\nimport { createChart, LineSeries, AreaSeries } from 'lightweight-charts';\nimport React, {\n	createContext,\n	forwardRef,\n	useCallback,\n	useContext,\n	useEffect,\n	useImperativeHandle,\n	useLayoutEffect,\n	useRef,\n	useState,\n} from 'react';\n\nconst Context = createContext();\n\nconst initialData = [\n	{ time: '2018-10-11', value: 52.89 },\n	{ time: '2018-10-12', value: 51.65 },\n	{ time: '2018-10-13', value: 51.56 },\n	{ time: '2018-10-14', value: 50.19 },\n	{ time: '2018-10-15', value: 51.86 },\n	{ time: '2018-10-16', value: 51.25 },\n];\n\nconst initialData2 = [\n	{ time: '2018-10-11', value: 42.89 },\n	{ time: '2018-10-12', value: 41.65 },\n	{ time: '2018-10-13', value: 41.56 },\n	{ time: '2018-10-14', value: 40.19 },\n	{ time: '2018-10-15', value: 41.86 },\n	{ time: '2018-10-16', value: 41.25 },\n];\nconst currentDate = new Date(initialData[initialData.length - 1].time);\n\nexport const App = props => {\n	const {\n		colors: {\n			backgroundColor = CHART_BACKGROUND_COLOR,\n			lineColor = LINE_LINE_COLOR,\n			textColor = CHART_TEXT_COLOR,\n		} = {},\n	} = props;\n\n	const [chartLayoutOptions, setChartLayoutOptions] = useState({});\n	// The following variables illustrate how a series could be updated.\n	const series1 = useRef(null);\n	const series2 = useRef(null);\n	const [started, setStarted] = useState(false);\n	const [isSecondSeriesActive, setIsSecondSeriesActive] = useState(false);\n\n	// The purpose of this effect is purely to show how a series could\n	// be updated using the `reference` passed to the `Series` component.\n	useEffect(() => {\n		if (series1.current === null) {\n			return;\n		}\n		let intervalId;\n\n		if (started) {\n			intervalId = setInterval(() => {\n				currentDate.setDate(currentDate.getDate() + 1);\n				const next = {\n					time: currentDate.toISOString().slice(0, 10),\n					value: 53 - 2 * Math.random(),\n				};\n				series1.current.update(next);\n				if (series2.current) {\n					series2.current.update({\n						...next,\n						value: 43 - 2 * Math.random(),\n					});\n				}\n			}, 1000);\n		}\n		return () => clearInterval(intervalId);\n	}, [started]);\n\n	useEffect(() => {\n		setChartLayoutOptions({\n			background: {\n				color: backgroundColor,\n			},\n			textColor,\n		});\n	}, [backgroundColor, textColor]);\n\n	return (\n		<>\n			<button type=\"button\" onClick={() => setStarted(current => !current)}>\n				{started ? 'Stop updating' : 'Start updating series'}\n			</button>\n			<button type=\"button\" onClick={() => setIsSecondSeriesActive(current => !current)}>\n				{isSecondSeriesActive ? 'Remove second series' : 'Add second series'}\n			</button>\n			<Chart layout={chartLayoutOptions}>\n				<Series\n					ref={series1}\n					type={'line'}\n					data={initialData}\n					color={lineColor}\n				/>\n				{isSecondSeriesActive && <Series\n					ref={series2}\n					type={'area'}\n					data={initialData2}\n					color={lineColor}\n				/>}\n			</Chart>\n		</>\n	);\n};\n\nexport function Chart(props) {\n	const [container, setContainer] = useState(false);\n	const handleRef = useCallback(ref => setContainer(ref), []);\n	return (\n		<div ref={handleRef}>\n			{container && <ChartContainer {...props} container={container} />}\n		</div>\n	);\n}\n\nexport const ChartContainer = forwardRef((props, ref) => {\n	const { children, container, layout, ...rest } = props;\n\n	const chartApiRef = useRef({\n		isRemoved: false,\n		api() {\n			if (!this._api) {\n				this._api = createChart(container, {\n					...rest,\n					layout,\n					width: container.clientWidth,\n					height: 300,\n				});\n				this._api.timeScale().fitContent();\n			}\n			return this._api;\n		},\n		free(series) {\n			if (this._api && series) {\n				this._api.removeSeries(series);\n			}\n		},\n	});\n\n	useLayoutEffect(() => {\n		const currentRef = chartApiRef.current;\n		const chart = currentRef.api();\n\n		const handleResize = () => {\n			chart.applyOptions({\n				...rest,\n				width: container.clientWidth,\n			});\n		};\n\n		window.addEventListener('resize', handleResize);\n		return () => {\n			window.removeEventListener('resize', handleResize);\n			chartApiRef.current.isRemoved = true;\n			chart.remove();\n		};\n	}, []);\n\n	useLayoutEffect(() => {\n		const currentRef = chartApiRef.current;\n		currentRef.api();\n	}, []);\n\n	useLayoutEffect(() => {\n		const currentRef = chartApiRef.current;\n		currentRef.api().applyOptions(rest);\n	}, []);\n\n	useImperativeHandle(ref, () => chartApiRef.current.api(), []);\n\n	useEffect(() => {\n		const currentRef = chartApiRef.current;\n		currentRef.api().applyOptions({ layout });\n	}, [layout]);\n\n	return (\n		<Context.Provider value={chartApiRef.current}>\n			{props.children}\n		</Context.Provider>\n	);\n});\nChartContainer.displayName = 'ChartContainer';\n\nexport const Series = forwardRef((props, ref) => {\n	const parent = useContext(Context);\n	const context = useRef({\n		api() {\n			if (!this._api) {\n				const { children, data, type, ...rest } = props;\n				this._api =\n					type === 'line'\n						? parent.api().addSeries(LineSeries, rest)\n						: parent.api().addSeries(AreaSeries, rest);\n				this._api.setData(data);\n			}\n			return this._api;\n		},\n		free() {\n			// check if parent component was removed already\n			if (this._api && !parent.isRemoved) {\n				// remove only current series\n				parent.free(this._api);\n			}\n		},\n	});\n\n	useLayoutEffect(() => {\n		const currentRef = context.current;\n		currentRef.api();\n\n		return () => currentRef.free();\n	}, []);\n\n	useLayoutEffect(() => {\n		const currentRef = context.current;\n		const { children, data, ...rest } = props;\n		currentRef.api().applyOptions(rest);\n	});\n\n	useImperativeHandle(ref, () => context.current.api(), []);\n\n	return (\n		<Context.Provider value={context.current}>\n			{props.children}\n		</Context.Provider>\n	);\n});\nSeries.displayName = 'Series';\n"}),"\n",(0,i.jsx)(n.h2,{id:"result",children:"Result"}),"\n","\n",(0,i.jsx)("div",{className:x.Z.ChartContainer,children:(0,i.jsx)(s.Z,{ChartComponent:f})}),"\n",(0,i.jsx)(n.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,i.jsx)(n.p,{children:"Consider other community examples on how to wrap Lightweight Charts\u2122 into React components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/trash-and-fire/lightweight-charts-react-wrapper",children:"lightweight-charts-react-wrapper"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/ukorvl/lightweight-charts-react-components",children:"lightweight-charts-react-components"})}),"\n"]})]})}function w(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}},30353:function(e,n,t){t.d(n,{ZP:()=>x});var r=t("85893"),i=t("67294"),a=t("31705"),s=t("44634"),o=t("79207"),c=t("57378"),l=t("64926"),h=t("6646");function d(e,n,t){e.addEventListener("resize",()=>{let e=n.getBoundingClientRect();t(e.width,e.height)},!0)}let p={3.8:async e=>{let n=await t.e("70967").then(t.bind(t,51083));return{module:n,createChart:(t,r)=>{let i=n.createChart(t,r);return d(e,t,i.resize.bind(i)),i},createChartEx:void 0,createYieldCurveChart:void 0,createOptionsChart:void 0}},"4.0":async e=>{let n=await t.e("98966").then(t.bind(t,11413));return{module:n,createChart:(t,r)=>{let i=n.createChart(t,r);return d(e,t,i.resize.bind(i)),i},createChartEx:void 0,createYieldCurveChart:void 0,createOptionsChart:void 0}},4.1:async e=>{let n=await t.e("85998").then(t.bind(t,1860));return{module:n,createChart:(t,r)=>{let i=n.createChart(t,r);return d(e,t,i.resize.bind(i)),i},createChartEx:(t,r,i)=>{let a=n.createChartEx(t,r,i);return d(e,t,a.resize.bind(a)),a},createYieldCurveChart:void 0,createOptionsChart:void 0}},4.2:async e=>{let n=await t.e("15373").then(t.bind(t,15757));return{module:n,createChart:(t,r)=>{let i=n.createChart(t,r);return d(e,t,i.resize.bind(i)),i},createChartEx:(t,r,i)=>{let a=n.createChartEx(t,r,i);return d(e,t,a.resize.bind(a)),a},createYieldCurveChart:void 0,createOptionsChart:void 0}},"5.0":async e=>{let n=await t.e("11191").then(t.bind(t,96473));return{module:n,createChart:(t,r)=>{let i=n.createChart(t,r);return d(e,t,i.resize.bind(i)),i},createChartEx:(t,r,i)=>{let a=n.createChartEx(t,r,i);return d(e,t,a.resize.bind(a)),a},createYieldCurveChart:(t,r)=>{let i=n.createYieldCurveChart(t,r);return d(e,t,i.resize.bind(i)),i},createOptionsChart:(t,r)=>{let i=n.createOptionsChart(t,r);return d(e,t,i.resize.bind(i)),i}}},current:async()=>{let e=await t.e("22433").then(t.bind(t,3768));return{module:e,createChart:(n,t)=>{let r=e.createChart(n,t);return d(window,n,r.resize.bind(r)),r},createChartEx:(n,t,r)=>{let i=e.createChartEx(n,t,r);return d(window,n,i.resize.bind(i)),i},createYieldCurveChart:(n,t)=>{let r=e.createYieldCurveChart(n,t);return d(window,n,r.resize.bind(r)),r},createOptionsChart:(n,t)=>{let r=e.createOptionsChart(n,t);return d(window,n,r.resize.bind(r)),r}}}},u={iframe:"iframe_R_Fr"};function f(e){let{script:n,iframeStyle:t}=e,{preferredVersion:a}=(0,c.J)(),s=h&&h.length>0?h["0"]:"",o=a?.name??s??"current",d=`
		<style>
			html,
			body,
			#container {
				width: 100%;
				height: 100%;
				overflow: hidden;
				margin: 0;
			}
		</style>
		<div id="container"></div>
		<script>
			window.run = () => {
				${n}
			};
		</script>
	`,f=i.useRef(null),C="current"===o||parseInt(o.split(".")[0])>=5;return(i.useEffect(()=>{let e=f.current,n=e?.contentWindow,t=e?.contentDocument;if(null===e||!n||!t||!C)return;let r=async()=>{try{let{module:e,createChart:t,createChartEx:r,createYieldCurveChart:i,createOptionsChart:a}=await p[o](n);Object.assign(n,e),n.createChart=t,n.createChartEx=r,n.createYieldCurveChart=i,n.createOptionsChart=a,n.LineSeries=e.LineSeries,n.AreaSeries=e.AreaSeries,n.CandlestickSeries=e.CandlestickSeries,n.BarSeries=e.BarSeries,n.HistogramSeries=e.HistogramSeries,n.run?.()}catch(e){console.error(e)}};if(void 0!==n.run)r();else{let n=()=>{r(),e.removeEventListener("load",n)};e.addEventListener("load",n)}},[d]),C)?(0,r.jsx)("iframe",{ref:f,srcDoc:d,className:u.iframe,style:t},n):(0,r.jsx)("div",{children:(0,r.jsx)(l.Z,{type:"caution",title:"Chart visualization is not available for this version",children:(0,r.jsx)("p",{children:"Switch to a version 5 or higher to see the chart"})})})}var C=t("98159");let m=()=>`${Math.random().toString(36).slice(2,11)}`,g=Object.keys(C.l.DARK),x=e=>{let{chart:n,replaceThemeConstants:t,hideableCode:c,chartOnly:l,chartOnTop:h=!1,iframeStyle:d,replaceTabs:p=!0,codeUsage:x,...O}=e,{children:v}=e,{colorMode:R}=(0,o.I)(),_=function(){let[e,n]=(0,i.useState)("");return(0,i.useEffect)(()=>n(m()),[]),e}();if(t&&"string"==typeof v&&(v=function(e,n){let t=n?C.l.DARK:C.l.LIGHT,r=e;for(let e of g)r=r.replace(RegExp(e,"g"),`'${t[e]}'`);return r}(v,"dark"===R)),p&&"string"==typeof v&&(v=v.replace(/\t/g,"    ")),v=v.replace(RegExp(/\/\/ delete-start[\w\W]*?\/\/ delete-end/,"gm"),""),n||c){let e=!l&&(0,r.jsx)(a.Z,{...O,children:v}),t=n&&(0,r.jsx)(s.Z,{fallback:(0,r.jsx)("div",{className:u.iframe,children:"\xa0"}),children:()=>(0,r.jsx)(f,{script:v,iframeStyle:d})}),i=c&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("input",{id:_,type:"checkbox",className:"toggle-hidden-lines"}),(0,r.jsx)("label",{className:"toggle-label",htmlFor:_,children:"Show all code"})]});return h?(0,r.jsxs)(r.Fragment,{children:[t,x,i,e]}):(0,r.jsxs)(r.Fragment,{children:[x,i,e,t]})}return(0,r.jsx)(a.Z,{...O,children:v})}},10169:function(e,n,t){t.d(n,{Z:function(){return c}});var r=t(85893),i=t(79207),a=t(67294),s=t(98159);function o(e){let n=e?"DARK":"LIGHT";return{backgroundColor:s.l[n].CHART_BACKGROUND_COLOR,lineColor:s.l[n].LINE_LINE_COLOR,textColor:s.l[n].CHART_TEXT_COLOR,areaTopColor:s.l[n].AREA_TOP_COLOR,areaBottomColor:s.l[n].AREA_BOTTOM_COLOR}}function c(e){let{ChartComponent:n}=e,t=function(){let{colorMode:e}=(0,i.I)(),n="dark"===e,[t,r]=(0,a.useState)(o(n));return(0,a.useEffect)(()=>{r(o(n))},[n]),t}();return(0,r.jsx)(n,{colors:t})}},98159:function(e,n,t){t.d(n,{l:function(){return r}});let r={DARK:{CHART_BACKGROUND_COLOR:"black",CHART_BACKGROUND_RGB_COLOR:"0, 0, 0",LINE_LINE_COLOR:"#2962FF",LINE_LINE2_COLOR:"rgb(225, 87, 90)",LINE_LINE3_COLOR:"rgb(242, 142, 44)",LINE_LINE4_COLOR:"rgb(164, 89, 209)",LINE_LINE5_COLOR:"rgb(27, 156, 133)",AREA_TOP_COLOR:"#2962FF",AREA_BOTTOM_COLOR:"rgba(41, 98, 255, 0.28)",BAR_UP_COLOR:"#26a69a",BAR_DOWN_COLOR:"#ef5350",BASELINE_TOP_LINE_COLOR:"rgba( 38, 166, 154, 1)",BASELINE_TOP_FILL_COLOR1:"rgba( 38, 166, 154, 0.28)",BASELINE_TOP_FILL_COLOR2:"rgba( 38, 166, 154, 0.05)",BASELINE_BOTTOM_LINE_COLOR:"rgba( 239, 83, 80, 1)",BASELINE_BOTTOM_FILL_COLOR1:"rgba( 239, 83, 80, 0.05)",BASELINE_BOTTOM_FILL_COLOR2:"rgba( 239, 83, 80, 0.28)",HISTOGRAM_COLOR:"#26a69a",CHART_TEXT_COLOR:"white"},LIGHT:{CHART_BACKGROUND_COLOR:"white",CHART_BACKGROUND_RGB_COLOR:"255, 255, 255",LINE_LINE_COLOR:"#2962FF",LINE_LINE2_COLOR:"rgb(225, 87, 90)",LINE_LINE3_COLOR:"rgb(242, 142, 44)",LINE_LINE4_COLOR:"rgb(164, 89, 209)",LINE_LINE5_COLOR:"rgb(27, 156, 133)",AREA_TOP_COLOR:"#2962FF",AREA_BOTTOM_COLOR:"rgba(41, 98, 255, 0.28)",BAR_UP_COLOR:"#26a69a",BAR_DOWN_COLOR:"#ef5350",BASELINE_TOP_LINE_COLOR:"rgba( 38, 166, 154, 1)",BASELINE_TOP_FILL_COLOR1:"rgba( 38, 166, 154, 0.28)",BASELINE_TOP_FILL_COLOR2:"rgba( 38, 166, 154, 0.05)",BASELINE_BOTTOM_LINE_COLOR:"rgba( 239, 83, 80, 1)",BASELINE_BOTTOM_FILL_COLOR1:"rgba( 239, 83, 80, 0.05)",BASELINE_BOTTOM_FILL_COLOR2:"rgba( 239, 83, 80, 0.28)",HISTOGRAM_COLOR:"#26a69a",CHART_TEXT_COLOR:"black"}}},6646:function(e){e.exports=JSON.parse('["5.0","4.2","4.1","4.0","3.8"]')}}]);